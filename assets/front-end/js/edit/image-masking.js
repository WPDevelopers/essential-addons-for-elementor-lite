/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/js/edit/image-masking.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/js/edit/image-masking.js":
/*!**************************************!*\
  !*** ./src/js/edit/image-masking.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var ImageMaskingHandler = function ImageMaskingHandler($scope, $) {\n  // Global storage for animation instances to prevent duplicates\n  window.eaelImageMaskingAnimations = window.eaelImageMaskingAnimations || {};\n  function get_clip_path(shape) {\n    var shapes = {\n      'circle': 'circle(42% at 50% 50%)',\n      'ellipse': 'ellipse(50% 35% at 50% 50%)',\n      'inset': 'inset(10% 10% 10% 10%)',\n      'triangle': 'polygon(50% 0%, 0% 100%, 100% 100%)',\n      'trapezoid': 'polygon(20% 0%, 80% 0%, 100% 100%, 0% 100%)',\n      'parallelogram': 'polygon(25% 0%, 100% 0%, 75% 100%, 0% 100%)',\n      'rhombus': 'polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%)',\n      'pentagon': 'polygon(50% 0%, 100% 38%, 82% 100%, 18% 100%, 0% 38%)',\n      'hexagon': 'polygon(25% 0%, 75% 0%, 100% 50%, 75% 100%, 25% 100%, 0% 50%)',\n      'heptagon': 'polygon(50% 0%, 90% 20%, 100% 60%, 75% 100%, 25% 100%, 0% 60%, 10% 20%)',\n      'octagon': 'polygon(30% 0%, 70% 0%, 100% 30%, 100% 70%, 70% 100%, 30% 100%, 0% 70%, 0% 30%)',\n      'nonagon': 'polygon(50% 0%, 85% 15%, 100% 50%, 85% 85%, 50% 100%, 15% 85%, 0% 50%, 15% 15%)',\n      'decagon': 'polygon(50% 0%, 80% 10%, 100% 40%, 95% 80%, 65% 100%, 35% 100%, 5% 80%, 0% 40%, 20% 10%)',\n      'star': 'polygon(50% 0%, 61% 35%, 98% 35%, 68% 57%, 79% 91%, 50% 70%, 21% 91%, 32% 57%, 2% 35%, 39% 35%)',\n      'cross': 'polygon(30% 0%, 70% 0%, 70% 30%, 100% 30%, 100% 70%, 70% 70%, 70% 100%, 30% 100%, 30% 70%, 0% 70%, 0% 30%, 30% 30%)',\n      'arrow': 'polygon(0% 40%, 60% 40%, 60% 20%, 100% 50%, 60% 80%, 60% 60%, 0% 60%)',\n      'left_arrow': 'polygon(100% 40%, 40% 40%, 40% 20%, 0% 50%, 40% 80%, 40% 60%, 100% 60%)',\n      'chevron': 'polygon(25% 0%, 100% 50%, 25% 100%, 0% 75%, 50% 50%, 0% 25%)',\n      'message': 'polygon(0% 0%, 100% 0%, 100% 75%, 75% 75%, 50% 100%, 50% 75%, 0% 75%)',\n      'close': 'polygon(20% 0%, 50% 30%, 80% 0%, 100% 20%, 70% 50%, 100% 80%, 80% 100%, 50% 70%, 20% 100%, 0% 80%, 30% 50%, 0% 20%)',\n      'frame': 'polygon(0% 0%, 0% 100%, 25% 100%, 25% 25%, 75% 25%, 75% 75%, 25% 75%, 25% 100%, 100% 100%, 100% 0%)',\n      'rabbet': 'polygon(20% 0%, 80% 0%, 80% 20%, 100% 20%, 100% 80%, 80% 80%, 80% 100%, 20% 100%, 20% 80%, 0% 80%, 0% 20%, 20% 20%)',\n      'starburst': 'polygon(50% 0%, 60% 20%, 80% 10%, 70% 30%, 90% 50%, 70% 70%, 80% 90%, 60% 80%, 50% 100%, 40% 80%, 20% 90%, 30% 70%, 10% 50%, 30% 30%, 20% 10%, 40% 20%)',\n      'blob': 'polygon(50% 0%, 80% 10%, 100% 40%, 90% 70%, 60% 100%, 30% 90%, 10% 60%, 0% 30%, 20% 10%)'\n    };\n    return shapes[shape] || '';\n  }\n\n  // Function to clean up existing animations for an element\n  function cleanupExistingAnimations(elementId) {\n    // Check if GSAP is available before attempting cleanup\n    if (typeof gsap === 'undefined') {\n      return;\n    }\n    if (window.eaelImageMaskingAnimations[elementId]) {\n      var existingAnimation = window.eaelImageMaskingAnimations[elementId];\n\n      // Kill existing GSAP timeline\n      if (existingAnimation.timeline) {\n        existingAnimation.timeline.kill();\n      }\n\n      // Remove animation reference\n      delete window.eaelImageMaskingAnimations[elementId];\n    }\n\n    // Also clean up any orphaned GSAP animations on the element\n    var element = $(\".elementor-element-\".concat(elementId));\n    if (element.length) {\n      gsap.killTweensOf(element.find('.eael-clip-path'));\n      gsap.killTweensOf(element.find('.clip-path'));\n    }\n  }\n  function renderImageMasking(model) {\n    var _model$attributes, _model$attributes2;\n    var settings = model === null || model === void 0 || (_model$attributes = model.attributes) === null || _model$attributes === void 0 || (_model$attributes = _model$attributes.settings) === null || _model$attributes === void 0 ? void 0 : _model$attributes.attributes;\n    var elementId = model === null || model === void 0 || (_model$attributes2 = model.attributes) === null || _model$attributes2 === void 0 ? void 0 : _model$attributes2.id,\n      element = $(\".elementor-element-\".concat(elementId));\n    var styleId = 'eael-image-masking-' + elementId;\n    $scope = element;\n\n    // Clean up existing animations before creating new ones\n    cleanupExistingAnimations(elementId);\n\n    // Remove existing style if present\n    $('#' + styleId).remove();\n    if ('yes' === (settings === null || settings === void 0 ? void 0 : settings.eael_enable_image_masking)) {\n      var style = '';\n      if ('clip' === (settings === null || settings === void 0 ? void 0 : settings.eael_image_masking_type)) {\n        var clipPath = get_clip_path(settings === null || settings === void 0 ? void 0 : settings.eael_image_masking_clip_path);\n        if ('custom' === (settings === null || settings === void 0 ? void 0 : settings.eael_image_masking_clip_path)) {\n          clipPath = settings === null || settings === void 0 ? void 0 : settings.eael_image_masking_custom_clip_path;\n          clipPath = clipPath.replace('clip-path: ', '');\n        }\n        if (clipPath) {\n          style += '.elementor-element-' + elementId + ' img {clip-path: ' + clipPath + ';}';\n        }\n        var hoverClipPath = get_clip_path(settings === null || settings === void 0 ? void 0 : settings.eael_image_masking_clip_path_hover);\n        if ('custom' === (settings === null || settings === void 0 ? void 0 : settings.eael_image_masking_clip_path_hover)) {\n          hoverClipPath = settings === null || settings === void 0 ? void 0 : settings.eael_image_masking_custom_clip_path_hover;\n          hoverClipPath = hoverClipPath.replace('clip-path: ', '');\n        }\n        if (hoverClipPath) {\n          var hoverSelector = settings === null || settings === void 0 ? void 0 : settings.eael_image_masking_hover_selector;\n          if (hoverSelector) {\n            hoverSelector = ' ' + hoverSelector.trim();\n          }\n          style += '.elementor-element-' + elementId + hoverSelector + ':hover img {clip-path: ' + hoverClipPath + ';}';\n        }\n      } else if ('image' === (settings === null || settings === void 0 ? void 0 : settings.eael_image_masking_type)) {\n        var image = settings === null || settings === void 0 ? void 0 : settings.eael_image_masking_image;\n        if (image !== null && image !== void 0 && image.url) {\n          style += '.elementor-element-' + elementId + ' img {mask-image: url(' + image.url + '); -webkit-mask-image: url(' + image.url + ');}';\n        }\n        var hoverImage = settings === null || settings === void 0 ? void 0 : settings.eael_image_masking_image_hover;\n        if (hoverImage !== null && hoverImage !== void 0 && hoverImage.url) {\n          var _hoverSelector = settings === null || settings === void 0 ? void 0 : settings.eael_image_masking_hover_selector;\n          if (_hoverSelector) {\n            _hoverSelector = ' ' + _hoverSelector.trim();\n          }\n          style += '.elementor-element-' + elementId + _hoverSelector + ':hover img {mask-image: url(' + hoverImage.url + '); -webkit-mask-image: url(' + hoverImage.url + ');}';\n        }\n      } else if ('morphing' === (settings === null || settings === void 0 ? void 0 : settings.eael_image_masking_type)) {\n        var morphingType = settings === null || settings === void 0 ? void 0 : settings.eael_morphing_type;\n        var $images = $(\".elementor-element-\".concat(elementId)).find('img');\n        if (settings !== null && settings !== void 0 && settings.eael_image_morphing_exclude_selectors) {\n          $images = $images.not(settings === null || settings === void 0 ? void 0 : settings.eael_image_morphing_exclude_selectors);\n        }\n        if ('clip-path' === morphingType) {\n          var _settings$eael_image_, _settings$eael_image_3, _settings$eael_image_5, _settings$eael_image_7;\n          var clipPaths = settings === null || settings === void 0 ? void 0 : settings.eael_clip_paths;\n          var paths = [];\n          clipPaths.forEach(function (clipPath) {\n            var _clipPath$attributes;\n            paths.push(clipPath === null || clipPath === void 0 || (_clipPath$attributes = clipPath.attributes) === null || _clipPath$attributes === void 0 ? void 0 : _clipPath$attributes.eael_clip_path.replace('clip-path: ', '').replace(';', '').replace('\\n', ''));\n          });\n          var animationData = {\n            polygonShapes: paths\n          };\n          if (settings !== null && settings !== void 0 && (_settings$eael_image_ = settings.eael_image_morphing_duration) !== null && _settings$eael_image_ !== void 0 && _settings$eael_image_.size) {\n            var _settings$eael_image_2;\n            animationData.duration = settings === null || settings === void 0 || (_settings$eael_image_2 = settings.eael_image_morphing_duration) === null || _settings$eael_image_2 === void 0 ? void 0 : _settings$eael_image_2.size;\n          }\n          if (settings !== null && settings !== void 0 && settings.eael_image_morphing_loop) {\n            animationData.loop = 'yes' === (settings === null || settings === void 0 ? void 0 : settings.eael_image_morphing_loop);\n          }\n          if (settings !== null && settings !== void 0 && settings.eael_image_morphing_ease) {\n            animationData.ease = settings === null || settings === void 0 ? void 0 : settings.eael_image_morphing_ease;\n          }\n          if (settings !== null && settings !== void 0 && (_settings$eael_image_3 = settings.eael_image_morphing_scale_min) !== null && _settings$eael_image_3 !== void 0 && _settings$eael_image_3.size) {\n            var _settings$eael_image_4;\n            animationData.scale.min = settings === null || settings === void 0 || (_settings$eael_image_4 = settings.eael_image_morphing_scale_min) === null || _settings$eael_image_4 === void 0 ? void 0 : _settings$eael_image_4.size;\n          }\n          if (settings !== null && settings !== void 0 && (_settings$eael_image_5 = settings.eael_image_morphing_scale_max) !== null && _settings$eael_image_5 !== void 0 && _settings$eael_image_5.size) {\n            var _settings$eael_image_6;\n            animationData.scale.max = settings === null || settings === void 0 || (_settings$eael_image_6 = settings.eael_image_morphing_scale_max) === null || _settings$eael_image_6 === void 0 ? void 0 : _settings$eael_image_6.size;\n          }\n          if (settings !== null && settings !== void 0 && settings.eael_image_morphing_rotation) {\n            animationData.rotation = 'yes' === (settings === null || settings === void 0 ? void 0 : settings.eael_image_morphing_rotation);\n          }\n          if (settings !== null && settings !== void 0 && (_settings$eael_image_7 = settings.eael_image_morphing_rotation_speed) !== null && _settings$eael_image_7 !== void 0 && _settings$eael_image_7.size) {\n            var _settings$eael_image_8;\n            animationData.rotationSpeed = settings === null || settings === void 0 || (_settings$eael_image_8 = settings.eael_image_morphing_rotation_speed) === null || _settings$eael_image_8 === void 0 ? void 0 : _settings$eael_image_8.size;\n          }\n          if (animationData && typeof PolygonMorphingAnimation !== 'undefined' && $images.length > 0) {\n            // Create animation instance for each image individually\n            $images.each(function (_, imgElement) {\n              new PolygonMorphingAnimation($(imgElement), animationData);\n            });\n          }\n        } else if ('svg' === (settings === null || settings === void 0 ? void 0 : settings.eael_morphing_type)) {\n          var _settings$eael_image_9;\n          var svgPaths = settings === null || settings === void 0 ? void 0 : settings.eael_svg_paths;\n          var svg_html = '<div id=\"eael-svg-items-' + elementId + '\" style=\"display: none;\">';\n          var svg_html_wrapper = $('#eael-svg-items-' + elementId);\n          var duration = (settings === null || settings === void 0 || (_settings$eael_image_9 = settings.eael_image_morphing_duration) === null || _settings$eael_image_9 === void 0 ? void 0 : _settings$eael_image_9.size) || 6;\n          var loop = 'yes' === (settings === null || settings === void 0 ? void 0 : settings.eael_image_morphing_loop);\n          svgPaths.forEach(function (svgPath) {\n            var _svgPath$attributes;\n            svg_html += DOMPurify.sanitize(svgPath === null || svgPath === void 0 || (_svgPath$attributes = svgPath.attributes) === null || _svgPath$attributes === void 0 ? void 0 : _svgPath$attributes.eael_svg_path);\n          });\n          svg_html += '</div>';\n          if (svg_html_wrapper.length > 0) {\n            svg_html_wrapper.remove();\n          }\n          element.append(svg_html);\n          var svg_items = $('#eael-svg-items-' + elementId).find('svg');\n          if (!svg_items.length) {\n            return;\n          }\n          var viewBox = svg_items.first().attr('viewBox');\n          var defaultPath = svg_items.first().find('path').first().attr('d');\n          $images.each(function (index, image) {\n            image = $(image);\n            var image_src = image.attr('src');\n            var uniqueId = $scope.data('id') + '-' + index;\n\n            // Wrap image in container for proper positioning\n            if (!image.parent().hasClass('eael-image-masking-container')) {\n              image.wrap('<div class=\"eael-image-masking-container\" style=\"position: relative; display: inline-block; overflow: hidden;\"></div>');\n            }\n\n            // Hide original image and add SVG\n            image.css('visibility', 'hidden');\n            image.after(createClippedSVG(image_src, uniqueId, viewBox, defaultPath, image[0]));\n          });\n\n          // Check if GSAP and required plugins are available\n          if (typeof gsap === 'undefined') {\n            return;\n          }\n\n          // Check if animation already exists for this element\n          if (window.eaelImageMaskingAnimations[elementId]) {\n            return; // Animation already running, prevent duplicate\n          }\n          var morphing = gsap.timeline({\n            repeat: loop ? -1 : 0,\n            yoyo: false,\n            repeatDelay: 0.001,\n            onComplete: function onComplete() {\n              // Clean up reference when animation completes (if not infinite)\n              if (!loop) {\n                delete window.eaelImageMaskingAnimations[elementId];\n              }\n            }\n          });\n\n          // Store animation reference to prevent duplicates\n          window.eaelImageMaskingAnimations[elementId] = {\n            timeline: morphing,\n            type: 'svg-morphing'\n          };\n          svg_items.first().appendTo(svg_items.parent());\n          svg_items = $('#eael-svg-items-' + $scope.data('id')).find('svg');\n          svg_items.each(function (index, element) {\n            var $svg = $(element);\n            var $path = $svg.find('path').first();\n            var transform = $path.attr('transform') || \"translate(0,0)\";\n            var clipPath = $scope.find('.eael-clip-path');\n\n            // Calculate duration per shape for smooth transitions\n            var totalDuration = duration || 6;\n            var durationPerShape = totalDuration / svg_items.length;\n\n            // Start first animation immediately, others at calculated intervals\n            var startTime = index * durationPerShape;\n            morphing.to(clipPath, {\n              morphSVG: {\n                shape: $path[0]\n              },\n              duration: durationPerShape,\n              ease: (settings === null || settings === void 0 ? void 0 : settings.eael_image_morphing_ease) || \"sine.inOut\",\n              onStart: function onStart() {\n                clipPath.attr('transform', transform);\n              }\n            }, startTime);\n          });\n        }\n      }\n      if (style) {\n        element.append('<style id=\"' + styleId + '\">' + style + '</style>');\n      }\n    }\n  }\n\n  // Check if polygon animation is enabled and get settings\n  function createClippedSVG(imageSrc, uniqueId, viewBox, pathD, originalImage) {\n    if ($(\"#eael-morphing-svg-\".concat(uniqueId)).length) {\n      return;\n    }\n    var imgWidth = originalImage.offsetWidth || originalImage.naturalWidth;\n    var imgHeight = originalImage.offsetHeight || originalImage.naturalHeight;\n\n    // Parse viewBox to get the coordinate system dimensions\n    var viewBoxValues = viewBox.split(' ').map(Number);\n    var viewBoxWidth = viewBoxValues[2];\n    var viewBoxHeight = viewBoxValues[3];\n    return \"\\n            <svg id=\\\"eael-morphing-svg-\".concat(uniqueId, \"\\\" viewBox=\\\"\").concat(viewBox, \"\\\" width=\\\"\").concat(imgWidth, \"\\\" height=\\\"\").concat(imgHeight, \"\\\" style=\\\"position: absolute; top: 0; left: 0; visibility: visible; display: block;\\\">\\n                <defs>\\n                    <clipPath id=\\\"eael-clip-path-\").concat(uniqueId, \"\\\">\\n                        <path class=\\\"eael-clip-path\\\" d=\\\"\").concat(pathD, \"\\\"/>\\n                    </clipPath>\\n                </defs>\\n                <image x=\\\"0\\\" y=\\\"0\\\" width=\\\"\").concat(viewBoxWidth, \"\\\" height=\\\"\").concat(viewBoxHeight, \"\\\" clip-path=\\\"url(#eael-clip-path-\").concat(uniqueId, \")\\\" href=\\\"\").concat(imageSrc, \"\\\" preserveAspectRatio=\\\"xMidYMid slice\\\"/>\\n            </svg>\\n        \");\n  }\n  function getImageMaskingSettingsVal(models) {\n    $.each(models, function (_, model) {\n      renderImageMasking(model);\n      if (model.attributes.elType !== 'widget') {\n        getImageMaskingSettingsVal(model.attributes.elements.models);\n      }\n    });\n  }\n  getImageMaskingSettingsVal(window.elementor.elements.models);\n};\njQuery(window).on(\"elementor/frontend/init\", function () {\n  if (eael.elementStatusCheck('eaelImageMaskingEditor')) {\n    return false;\n  }\n  elementorFrontend.hooks.addAction(\"frontend/element_ready/widget\", ImageMaskingHandler);\n  elementorFrontend.hooks.addAction(\"frontend/element_ready/container\", ImageMaskingHandler);\n  elementorFrontend.hooks.addAction(\"frontend/element_ready/section\", ImageMaskingHandler);\n});\n\n//# sourceURL=webpack:///./src/js/edit/image-masking.js?");

/***/ })

/******/ });